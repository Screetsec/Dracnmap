#!/usr/bin/env bash

################################################################################
############################### Global variables ###############################
################################################################################

_ip_list=()
_ip_amount=""
_ip=""
_port=""
_user=""
_pass=""


################################################################################
######################## Definitions of user functions #########################
################################################################################

# ``````````````````````````````````````````````````````````````````````````````
# Function name: _init_cli()
#
# Description:
#   Starting the Dracnmap command interpreter.
#
# Usage:
#   _init_cli
#
# Examples:
#   _init_cli
#

function _init_cli() {

  local _FUNCTION_ID="_init_cli"
  local _STATE=0

  input_array=()

  while [ "${input_array[0]}" != "exit" ] ; do

    cstate="1"

    __cli_banner="dracnmap-v2"

    printf "\e[1;31m%s\e[m " "${__cli_prompt}${__cli_banner}>" && read -ra input_array

    case ${input_array[0]} in

      01|1)

        $xterm $_ip

        cstate=1
        ;;

      02|2)

        echo -en $cyan""
        echo -en "How many addresses do you want to scan? " ; tput sgr0
        read -ra _ip_amount

        for i in $(seq 1 $_ip_amount) ; do

          _get_ip
          _ip_list+=("$_ip")

        done

        if [[ $? -eq 0 ]] ; then

          $xterm ${_ip_list[@]}

        fi

        cstate=1
        ;;

      03|3)

        $xterm -sV -T4 -O -F --version-light 1 $_ip

        cstate=1
        ;;

      04|4)

        $xterm -sA $_ip

        cstate=1
        ;;

      05|5)

        $xterm -sS -P0 $_ip

        cstate=1
        ;;

      06|6)
        menu_pingbebeb
        _init_cli_pingbebeb
        ;;
      07|7)
        menu_webservice
        _init_cli_webservice
        ;;
      08|8)
        menu_nse
        _init_cli_nse
        ;;
      09|9)
        menu_zenmapscript
        _init_cli_zenmapscript
        ;;
      10)
        menu_scanoutput
        _init_cli_scanoutput
        ;;
      11)
        credits
        ;;
      clear)
        menu
        cstate="0" ;;

      set)

        if [ ${input_array[1]} ] ; then

          case ${input_array[1]} in

            session)

              if [ ${input_array[2]} ] ; then

                case ${input_array[2]} in

                  ip)
                    _get_ip
                    ;;
                  port)
                    _get_port
                    ;;
                  user)
                    _get_user
                    ;;
                  pass)
                    _get_pass
                    ;;
                  *)
                    printf "stdout: unknown command\n" ;;

                esac

              else

                printf "invalid session params\n"

              fi
              ;;
            *)
              printf "stdout: unknown command\n" ;;

          esac

        else

          printf "%s" "
Usage:
  set <type> <value>

Examples:
  set session ip
  set session user

Options:
  session:
    ip        set ip address
    port      set port number
    user      set user name
    pass      set user password

"

        fi
        cstate="0" ;;

      exit)
        clear
        sleep 1
        echo ""
        echo -e $yellow"[*] Thank You For Using Dracnmap  =)."
        echo ""
        echo -e $yellow"[*] Check Dracos Linux LFS, Penetration OS From Indonesia  =P."
        cstate="0" ;;
      "")
        echo -en ""
        cstate="0" ;;
      *)

        if [ "$cstate" -eq "1" ] ; then

          printf "stdout: unknown command\n"

        fi

      ;;

    esac

  done

  return $_STATE

}

###################################################
# Function Menu
###################################################

# Author of changes: trimstray (contact@nslab.at, https://github.com/trimstray)
#   - removed blank spaces/tabs
#   - correcting indentation (transparent code)
#   - replaced 'test' to '[[ ]]'
#   - changed comparison operator (-eq)
#   - protection against giving an illegal value
function menu() {

  clear
  echo -e $red ""
  echo "             80G08        "
  echo "                8G#G@8  "
  echo "                  8##0  "
  echo "                   0##G8    "
  echo "                     ####08 "
  echo "                      8#####8   "
  echo "                        G#####8   "
  echo "                         8G#####8   "
  echo "      #8#########0         #######8   "
  echo "          8#######0          0#88#####    "
  echo "            8G####8         8 8#8@@8###   "
  echo "               8###        G8   8@G######   "
  echo "                8##88       8     8######8    "
  echo "                  G##088          80G##G080   "
  echo "                    88000000008880#      000    "
  echo "                          9               0 "
  echo -e $okegreen"       .___                     _______                         ";
  echo "     __| _/___________    ____  \      \   _____ _____  ______  ";
  echo "    / __ |\_  __ \__  \ _/ ___\ /   |   \ /     \\__  \ \____  \ ";
  echo "   / /_/ | |  | \// __ \\  \___/     |    \  Y Y  \/ __ \|  |_> >";
  echo "   \____ | |__|  (____  /\___  >____|__  /__|_|  (____  /   __/ ";
  echo "        \/            \/     \/        \/      \/     \/|__|    ";
  echo ""
  echo -e $cyan"    Script by           $white":" $red Edo Maland ( Screetsec ) "
  echo -e $cyan"    Version             $white":" $red $Version  "
  echo -e $cyan"    Codename            $white":" $red $Codename "
  echo -e $cyan"    Follow me on Github $white":" $red @Screetsec "
  echo -e $cyan"    Dracos Linux        $white":" $red dracos-linux.org "
  echo -e $cyan ""
  echo -e $okegreen"    =========================================================    ";
  echo -e $white " "

  echo -e $white"     ID                    DESCRIPTION"
  echo -e $white"    ---------------------------------------------------------"
  echo -e $white"    [$okegreen"01"$white]$cyan  REGULER SCAN "
  echo -e $white"    [$okegreen"02"$white]$cyan  SCAN MULTIPLE IP ADDRESS "
  echo -e $white"    [$okegreen"03"$white]$cyan  SCAN OS VERSION AND TRACEROUTE "
  echo -e $white"    [$okegreen"04"$white]$cyan  FIND OUT IF A HOST IS PROTECTED FIREWALL  "
  echo -e $white"    [$okegreen"05"$white]$cyan  EVADING FIREWALLS "
  echo -e $white"    [$okegreen"06"$white]$cyan  PING PING !!   "
  echo -e $white"    [$okegreen"07"$white]$cyan  WEB SERVICES"
  echo -e $white"    [$okegreen"08"$white]$cyan  NMAP SCRIPT ENGINE - ADVANCED   "
  echo -e $white"    [$okegreen"09"$white]$cyan  ADVANCED NMAP SCANNINGS ( ZENMAP COMMAND ) "
  echo -e $white"    [$okegreen"10"$white]$cyan  SCANNING TARGET WITH OUTPUT FILES"
  echo -e $white"    [$okegreen"11"$white]$cyan  CREDITS  "
  echo -e " "

}

#######################################################
# CREDITS
#######################################################

# Author of changes: trimstray (contact@nslab.at, https://github.com/trimstray)
#   - removed blank spaces/tabs
#   - correcting indentation (transparent code)
function credits {

  clear
  echo -e "
  \033[31m##########################################################################\033[m
                  Credits To
  \033[31m##########################################################################\033[m"
  echo
  echo -e $white "Special thanks to:"
  echo
  echo -e $red "Dracos Linux ( www.dracos-linux.org )"
  echo
  echo -e $okegreen "Offensive Security for the awesome OS"
  echo
  echo -e $green "http://www.offensive-security.com/"
  echo
  echo -e $yellow "http://www.kali.org/"
  echo
  echo -e $cyan "http://www.kitploit.com/"
  echo
  echo -e $white "http://www.linuxsec.org/"
  echo
  echo -e $okegreen "My Friend for helpme ( Boy Suganda )"
  echo
  echo -e $red "Big Thanks to : http://www.github.com/"
  echo

}

# ``````````````````````````````````````````````````````````````````````````````
# Function name: _get_ip()
#
# Description:
#   Gets the IP address.
#
# Usage:
#   _get_ip
#
# Examples:
#   _get_ip
#

function _get_ip() {

  local _FUNCTION_ID="_get_ip"
  local _STATE=0

  echo -en $cyan""
  echo -en "What is your IP Target or Host: " ; tput sgr0
  read -ra _ip

  if [[ $_ip =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]] ; then

    _STATE=0

  else

    printf "%s\n" "invalid ip address"
    _STATE=1

  fi

  return $_STATE

}

# ``````````````````````````````````````````````````````````````````````````````
# Function name: _get_port()
#
# Description:
#   Gets the port number.
#
# Usage:
#   _get_port
#
# Examples:
#   _get_port
#

function _get_port() {

  local _FUNCTION_ID="_get_port"
  local _STATE=0

  echo -en $cyan""
  echo -en "What is your Port Target: " ; tput sgr0
  read -ra _port

  return $_STATE

}

# ``````````````````````````````````````````````````````````````````````````````
# Function name: _get_user()
#
# Description:
#   Gets the username.
#
# Usage:
#   _get_user
#
# Examples:
#   _get_user
#

function _get_user() {

  local _FUNCTION_ID="_get_user"
  local _STATE=0

  echo -en $cyan""
  echo -en "What is your cmd user: " ; tput sgr0
  read -ra _user

  return $_STATE

}

# ``````````````````````````````````````````````````````````````````````````````
# Function name: _get_pass()
#
# Description:
#   Gets the password.
#
# Usage:
#   _get_pass
#
# Examples:
#   _get_pass
#

function _get_pass() {

  local _FUNCTION_ID="_get_pass"
  local _STATE=0

  echo -en $cyan""
  echo -en "What is your cmd pass: " ; tput sgr0
  read -ra _pass

  return $_STATE

}
