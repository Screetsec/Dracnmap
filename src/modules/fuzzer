#!/usr/bin/env bash

# ``````````````````````````````````````````````````````````````````````````````
# Function name: _init_cli_fuzzer()
#
# Description:
#   Starting the Dracnmap Fuzzer module.
#
# Usage:
#   _init_cli_fuzzer
#
# Examples:
#   _init_cli_fuzzer
#

function _init_cli_fuzzer() {

  local _FUNCTION_ID="_init_cli_fuzzer"
  local _STATE=0

  input_array=()

  while [ "${input_array[0]}" != "back" ] ; do

    cstate="1"

    __cli_banner="nse-fuzzer"

    printf "\e[1;31m%s\e[m " "${__cli_prompt}${__cli_banner}>" && read -ra input_array

    case ${input_array[0]} in

      01|1)

        _init_cmd "$xterm -sU --script dns-fuzz --script-args timelimit=2h $_ipaddr"

        cstate=1
        ;;

      02|2)

        _init_cmd "$xterm -p 80 --script http-form-fuzzer --script-args 'http-form-fuzzer.targets={1={path=/},2={path=/register.html}}' $_ipaddr"

        cstate=1
        ;;

      03|3)

        _init_cmd "$xterm -p80 --script=http-phpself-xss $_ipaddr"

        cstate=1
        ;;

      help)

        _help_
        cstate="0" ;;

      show)

        if [ ${input_array[1]} ] ; then

          case ${input_array[1]} in

            session)

              show_session
              ;;

            *)
              printf "stdout: %s\n" "unknown command" ;;

          esac

        else

          printf "stdout: %s\n" "unknown argument"

        fi
        cstate="0" ;;

      set)

        if [ ${input_array[1]} ] ; then

          case ${input_array[1]} in

            session)

              if [ ${input_array[2]} ] ; then

                set_session "${input_array[2]}"

              else

                printf "stdout: %s\n" "invalid session params"

              fi
              ;;

            *)
              printf "stdout: %s\n" "unknown command" ;;

          esac

        else

          printf "stdout: %s\n" "unknown argument"

        fi
        cstate="0" ;;

      clear)

        menu_fuzzer
        _init_cli_fuzzer
        cstate="0" ;;

      back)

        menu_nse
        _init_cli_nse
        cstate="0" ;;

      main)

        menu
        cstate="0" ;;

      nmap)

        _init_cmd "nmap ${input_array[@]:1}"
        cstate="0" ;;

      exit)
        _exit_ 0 ;;
      "")
        echo -en ""
        cstate="0" ;;
      *)

        if [ "$cstate" -eq "1" ] ; then

          printf "stdout: unknown command\n"

        fi

      ;;

    esac

  done

  return $_STATE

}

# Author of changes: trimstray (contact@nslab.at, https://github.com/trimstray)
#   - removed blank spaces/tabs
#   - correcting indentation (transparent code)
#   - replaced 'test' to '[[ ]]'
#   - changed comparison operator (-eq)
#   - protection against giving an illegal value
function menu_fuzzer() {

  clear
  echo
  echo

  echo -e $white"     ID                    DESCRIPTION"
  echo -e $white"    ---------------------------------------------------------"
  echo -e $white"    [$okegreen"01"$white]$cyan File dns-fuzz"
  echo -e $white"    [$okegreen"02"$white]$cyan File http-form-fuzzer"
  echo -e $white"    [$okegreen"03"$white]$cyan File http-phpself-xss"
  echo -e " "

}
