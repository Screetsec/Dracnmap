#!/usr/bin/env bash

# ``````````````````````````````````````````````````````````````````````````````
# Function name: _init_cli_brd()
#
# Description:
#   Starting the Dracnmap Broadcast module.
#
# Usage:
#   _init_cli_brd
#
# Examples:
#   _init_cli_brd
#

function _init_cli_brd() {

  local _FUNCTION_ID="_init_cli_brd"
  local _STATE=0

  input_array=()

  while [ "${input_array[0]}" != "back" ] ; do

    cstate="1"

    __cli_banner="nse-broadcast"

    printf "\e[1;31m%s\e[m " "${__cli_prompt}${__cli_banner}>" && read -ra input_array

    case ${input_array[0]} in

      01|1)

        $xterm -e $_iface --script broadcast-ataoe-discover

        cstate=1
        ;;

      02|2)

        $xterm -e $_iface --script=broadcast-avahi-dos

        cstate=1
        ;;

      03|3)

        $xterm -e $_iface --script broadcast-bjnp-discover

        cstate=1
        ;;

      04|4)

        $xterm -e $_iface --script db2-discover

        cstate=1
        ;;

      05|5)

        $xterm -e $_iface --script broadcast-dhcp-discover

        cstate=1
        ;;

      06|6)

        $xterm -e $_iface -6 --script broadcast-dhcp6-discover

        cstate=1
        ;;

      07|7)

        $xterm -e $_iface --script=broadcast-dns-service-discovery

        cstate=1
        ;;

      08|8)

        $xterm -e $_iface --script=broadcast-dropbox-listener --script-args=newtargets -Pn

        cstate=1
        ;;

      09|9)

        $xterm -e $_iface --script=broadcast-eigrp-discovery $_ip

        cstate=1
        ;;

      10)

        $xterm -e $_iface --script broadcast-igmp-discovery

        cstate=1
        ;;

      11)

        $xterm -e $_iface --script broadcast-listener

        cstate=1
        ;;

      12)

        $xterm -e $_iface --script broadcast-ms-sql-discover

        cstate=1
        ;;

      13)

        $xterm -e $_iface --script=broadcast-netbios-master-browser

        cstate=1
        ;;

      14)

        $xterm -e $_iface --script broadcast-networker-discover

        cstate=1
        ;;

      15)

        $xterm -e $_iface -sV --script=broadcast-novell-locate

        cstate=1
        ;;

      16)

        $xterm -e $_iface --script broadcast-pc-anywhere

        cstate=1
        ;;

      17)

        $xterm -e $_iface --script broadcast-pc-duo

        cstate=1
        ;;

      18)

        $xterm -e $_iface --script broadcast-pim-discovery

        cstate=1
        ;;

      19)

        echo -ne $okegreen "Default value for TTL is 64 & the length of the payload is 0: " ; tput sgr0
        read _ttl

        echo -ne $okegreen "The payload is consisted of random bytes: " ; tput sgr0
        read _payload

        echo -ne $okegreen "Timespec specifying how long to wait for response (default 3s): " ; tput sgr0
        read _ti

        echo -ne $okegreen "Number specifying how many ICMP probes should be sent (default 1): " ; tput sgr0
        read _np

        $xterm -e $_iface [--ttl "$_ttl"] [--data-length "$_payload"] --script broadcast-ping [--script-args [broadcast-ping.timeout="$_ti"],[num-probes="$_np"]]]

        cstate=1
        ;;

      20)

        $xterm -e $_iface --script broadcast-pppoe-discover

        cstate=1
        ;;

      21)

        $xterm -e $_iface --script broadcast-rip-discover

        cstate=1
        ;;

      22)

        $xterm -e $_iface --script broadcast-ripng-discover

        cstate=1
        ;;

      23)

        $xterm -e $_iface --script broadcast-sonicwall-discover

        cstate=1
        ;;

      24)

        $xterm -e $_iface --script broadcast-sybase-asa-discover

        cstate=1
        ;;

      25)

        $xterm -e $_iface --script broadcast-tellstick-discover

        cstate=1
        ;;

      26)

        $xterm -e $_iface -sV --script=broadcast-upnp-info

        cstate=1
        ;;

      27)

        $xterm -e $_iface --script broadcast-versant-locate

        cstate=1
        ;;

      28)

        $xterm -e $_iface --script broadcast-wake-on-lan --script-args broadcast-wake-on-lan.MAC="$_hwaddr"

        cstate=1
        ;;

      29)

        $xterm -e $_iface --script broadcast-wpad-discover

        cstate=1
        ;;

      30)

        $xterm -e $_iface --script broadcast-wsdd-discover

        cstate=1
        ;;

      31)

        $xterm -e $_iface --script broadcast-xdmcp-discover

        cstate=1
        ;;

      32)

        $xterm -e $_iface --script eap-info [--script-args=eap-info.identity=0-user,eap-info.scan={13,50}] $_ip

        cstate=1
        ;;

      33)

        $xterm -e $_iface --script=ipv6-multicast-mld-list

        cstate=1
        ;;

      34)

        $xterm -e $_iface --script knx-gateway-discover

        cstate=1
        ;;

      35)

        echo -ne $okegreen "Hostname to resolve: " ; tput sgr0
        read _hostname

        $xterm -e $_iface --script llmnr-resolve --script-args llmnr-resolve.hostname="$_hostname"

        cstate=1
        ;;

      36)

        $xterm -e $_iface --script lltd-discovery

        cstate=1
        ;;

      37)

        $xterm -e $_iface --script mrinfo

        cstate=1
        ;;

      38)

        echo -ne $okegreen "Source address from which to traceroute: " ; tput sgr0
        read _rt

        $xterm -e $_iface --script mtrace --script-args mtrace.fromip="$_rt"

        cstate=1
        ;;

      39)

        $xterm --script=targets-ipv6-multicast-echo.nse --script-args newtargets,interface="$_iface" -sL

        cstate=1
        ;;

      40)

        $xterm --script=targets-ipv6-multicast-invalid-dst.nse --script-args newtargets,interface="$_iface" -sP

        cstate=1
        ;;

      41)

        $xterm --script=targets-ipv6-multicast-mld.nse --script-args newtargets,interface="$_iface"

        cstate=1
        ;;

      42)

        $xterm --script targets-ipv6-multicast-slaac --script-args newtargets,interface="$_iface" -sP

        cstate=1
        ;;

      43)

        $xterm -sL --script=targets-sniffer --script-args=newtargets,targets-sniffer.timeout=5s,targets-sniffer.iface="$_iface"

        cstate=1
        ;;

      clear)
        menu_brd
        _init_cli_brd
        cstate="0" ;;
      back)
        menu_nse
        _init_cli_nse
        cstate="0" ;;
      main)
        menu
        _init_cli
        cstate="0" ;;
      exit)
        _exit_ 0 ;;
      "")
        echo -en ""
        cstate="0" ;;
      *)

        if [ "$cstate" -eq "1" ] ; then

          printf "stdout: unknown command\n"

        fi

      ;;

    esac

  done

  return $_STATE

}

# Author of changes: trimstray (contact@nslab.at, https://github.com/trimstray)
#   - removed blank spaces/tabs
#   - correcting indentation (transparent code)
#   - replaced 'test' to '[[ ]]'
#   - changed comparison operator (-eq)
#   - protection against giving an illegal value
function menu_brd() {

  clear
  echo
  echo

  echo -e $white"     ID                    DESCRIPTION"
  echo -e $white"    ---------------------------------------------------------"
  echo -e $white"    [$okegreen"01"$white]$cyan broadcast-ataoe-discover "
  echo -e $white"    [$okegreen"02"$white]$cyan broadcast-avahi-dos  "
  echo -e $white"    [$okegreen"03"$white]$cyan broadcast-bjnp-discover "
  echo -e $white"    [$okegreen"04"$white]$cyan broadcast-db2-discover "
  echo -e $white"    [$okegreen"05"$white]$cyan broadcast-dhcp-discover  "
  echo -e $white"    [$okegreen"06"$white]$cyan broadcast-dhcp6-discover "
  echo -e $white"    [$okegreen"07"$white]$cyan broadcast-dns-service-discovery  "
  echo -e $white"    [$okegreen"08"$white]$cyan broadcast-dropbox-listener "
  echo -e $white"    [$okegreen"09"$white]$cyan broadcast-eigrp-discovery  "
  echo -e $white"    [$okegreen"10"$white]$cyan broadcast-igmp-discovery "
  echo -e $white"    [$okegreen"11"$white]$cyan broadcast-listener "
  echo -e $white"    [$okegreen"12"$white]$cyan broadcast-ms-sql-discover  "
  echo -e $white"    [$okegreen"13"$white]$cyan broadcast-netbios-master-browser "
  echo -e $white"    [$okegreen"14"$white]$cyan broadcast-networker-discover "
  echo -e $white"    [$okegreen"15"$white]$cyan broadcast-novell-locate  "
  echo -e $white"    [$okegreen"16"$white]$cyan broadcast-pc-anywhere  "
  echo -e $white"    [$okegreen"17"$white]$cyan broadcast-pc-duo "
  echo -e $white"    [$okegreen"18"$white]$cyan broadcast-pim-discovery  "
  echo -e $white"    [$okegreen"19"$white]$cyan broadcast-ping "
  echo -e $white"    [$okegreen"20"$white]$cyan broadcast-pppoe-discover "
  echo -e $white"    [$okegreen"21"$white]$cyan broadcast-rip-discover "
  echo -e $white"    [$okegreen"22"$white]$cyan broadcast-ripng-discover "
  echo -e $white"    [$okegreen"23"$white]$cyan broadcast-sonicwall-discover "
  echo -e $white"    [$okegreen"24"$white]$cyan broadcast-sybase-asa-discover  "
  echo -e $white"    [$okegreen"25"$white]$cyan broadcast-tellstick-discover "
  echo -e $white"    [$okegreen"26"$white]$cyan broadcast-upnp-info  "
  echo -e $white"    [$okegreen"27"$white]$cyan broadcast-versant-locate "
  echo -e $white"    [$okegreen"28"$white]$cyan broadcast-wake-on-lan  "
  echo -e $white"    [$okegreen"29"$white]$cyan broadcast-wpad-discover  "
  echo -e $white"    [$okegreen"30"$white]$cyan broadcast-wsdd-discover  "
  echo -e $white"    [$okegreen"31"$white]$cyan broadcast-xdmcp-discover "
  echo -e $white"    [$okegreen"32"$white]$cyan eap-info "
  echo -e $white"    [$okegreen"33"$white]$cyan ipv6-multicast-mld-list  "
  echo -e $white"    [$okegreen"34"$white]$cyan knx-gateway-discover "
  echo -e $white"    [$okegreen"35"$white]$cyan llmnr-resolve  "
  echo -e $white"    [$okegreen"36"$white]$cyan lltd-discovery "
  echo -e $white"    [$okegreen"37"$white]$cyan mrinfo "
  echo -e $white"    [$okegreen"38"$white]$cyan mtrace "
  echo -e $white"    [$okegreen"39"$white]$cyan targets-ipv6-multicast-echo  "
  echo -e $white"    [$okegreen"40"$white]$cyan targets-ipv6-multicast-invalid-dst "
  echo -e $white"    [$okegreen"41"$white]$cyan targets-ipv6-multicast-mld "
  echo -e $white"    [$okegreen"42"$white]$cyan targets-ipv6-multicast-slaac "
  echo -e $white"    [$okegreen"43"$white]$cyan targets-sniffer  "
  echo -e " "

}
